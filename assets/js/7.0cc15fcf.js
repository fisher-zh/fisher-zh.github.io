(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{174:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/fisher-zh/mock",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),s("OutboundLink")],1)]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),s("p",[t._v("如需使用由javascript + koa 构建的版本，请选择 javascript 分支下载即可")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"mock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mock","aria-hidden":"true"}},[this._v("#")]),this._v(" Mock")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("基于Typescript Koa 构建的数据模拟服务")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖","aria-hidden":"true"}},[this._v("#")]),this._v(" 依赖")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("npm")]),this._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("install")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发","aria-hidden":"true"}},[this._v("#")]),this._v(" 开发")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("npm")]),this._v(" run dev\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译","aria-hidden":"true"}},[this._v("#")]),this._v(" 编译")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("npm")]),this._v(" run build\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"格式限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#格式限制","aria-hidden":"true"}},[this._v("#")]),this._v(" 格式限制")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("npm")]),this._v(" run lint\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"热更新（监测文件的改变）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#热更新（监测文件的改变）","aria-hidden":"true"}},[this._v("#")]),this._v(" 热更新（监测文件的改变）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("npm")]),this._v(" run "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("watch")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能","aria-hidden":"true"}},[this._v("#")]),this._v(" 功能")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("模拟后端接口返回数据，使前端在项目初期不依赖与后端进行独立开发")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("在 mock 文件内的 routes.json 中配置相应的接口数据即可，后续将提供可视化配置界面")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"配置参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置参数","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置参数")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('"baseRoute": "app",              // 路由前缀，如所有的路由都已app开头 /app/xxxx\n\n"url": "/getName",               // 路由地址（必填）\n"method": "GET",                 // 请求方法（必填）目前仅支持 GET POST\n"request": {                     // 请求参数，如果在返回值中未使用可为 {}\n    "name": ""\n},\n"response": {                    // 返回值\n    "name": {                    // 返回值参数\n        "isMockConfig": true,    // 如果返回值需要动态化配置，该参数需为true，如果未配置或未false，将直接返回该参数的值    "isRequest": true,       // 返回值是否来自于请求参数，该值为true时必须配置requestKey\n        "requestKey": "name",    // 请求参数的key，当isRequest为true时才依赖该值\n        "isRandom": true,        // 返回值是否为随机值\n        "randomType": "string",  // 随机值的类型，目前可选值 ["string", "number"]\n        "defaultValue": "abc"    // 默认值（未配置其他值时，该值必填）\n    }\n}\ntips: isRequest、isRandom 原则上不能同时启用，但如果同时启用，那么isRequest的优先级高于isRandom\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"javascript-版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-版本","aria-hidden":"true"}},[this._v("#")]),this._v(" javascript 版本")])}],!1,null,null,null);r.options.__file="README.md";e.default=r.exports}}]);